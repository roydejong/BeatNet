// This file was generated by BeatNet.CodeGen (NetSerializableGenerator)
// Do not modify manually

using System;
using BeatNet.Lib.Net.Interfaces;
using BeatNet.Lib.Net.IO;
using BeatNet.Lib.BeatSaber.Common;
using BeatNet.Lib.BeatSaber.Generated.Enum;

namespace BeatNet.Lib.BeatSaber.Generated.NetSerializable;

// ReSharper disable InconsistentNaming IdentifierTypo ClassNeverInstantiated.Global MemberCanBePrivate.Global
public sealed class BitMask256 : INetSerializable
{
	public ulong D0 { get; set; }
	public ulong D1 { get; set; }
	public ulong D2 { get; set; }
	public ulong D3 { get; set; }

	public const int BitCount = 256;
	public static BitMask256 MinValue => new(0, 0, 0, 0);
	public static BitMask256 MaxValue => new(ulong.MaxValue, ulong.MaxValue, ulong.MaxValue, ulong.MaxValue);

	public BitMask256(ulong d0 = 0, ulong d1 = 0, ulong d2 = 0, ulong d3 = 0)
	{
		D0 = d0;
		D1 = d1;
		D2 = d2;
		D3 = d3;
	}

	public void WriteTo(ref NetWriter writer)
	{
		writer.WriteULong((ulong)D0);
		writer.WriteULong((ulong)D1);
		writer.WriteULong((ulong)D2);
		writer.WriteULong((ulong)D3);
	}

	public void ReadFrom(ref NetReader reader)
	{
		D0 = (ulong)reader.ReadULong();
		D1 = (ulong)reader.ReadULong();
		D2 = (ulong)reader.ReadULong();
		D3 = (ulong)reader.ReadULong();
	}
}