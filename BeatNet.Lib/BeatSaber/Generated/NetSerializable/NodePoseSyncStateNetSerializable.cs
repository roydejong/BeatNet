// This file was generated by BeatNet.CodeGen (NetSerializableGenerator)
// Do not modify manually

using System;
using BeatNet.Lib.Net;
using BeatNet.Lib.Net.IO;
using BeatNet.Lib.BeatSaber.Common;
using BeatNet.Lib.BeatSaber.Generated.Enum;

namespace BeatNet.Lib.BeatSaber.Generated.NetSerializable;

// ReSharper disable InconsistentNaming IdentifierTypo ClassNeverInstantiated.Global

public sealed class NodePoseSyncStateNetSerializable : INetSerializable
{
	public SyncStateId Id { get; set; }
	public long Time { get; set; }
	public NodePoseSyncState State { get; set; }

	public NodePoseSyncStateNetSerializable(SyncStateId id, long time, NodePoseSyncState state)
	{
		Id = id;
		Time = time;
		State = state;
	}

	public void WriteTo(ref NetWriter writer)
	{
		writer.WriteSerializable<SyncStateId>(Id);
		writer.WriteVarULong((ulong)Time);
		writer.WriteSerializable<NodePoseSyncState>(State);
	}

	public void ReadFrom(ref NetReader reader)
	{
		Id = reader.ReadSerializable<SyncStateId>();
		Time = (long)reader.ReadVarULong();
		State = reader.ReadSerializable<NodePoseSyncState>();
	}
}