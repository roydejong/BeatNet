// This file was generated by BeatNet.CodeGen (NetSerializableGenerator)
// Do not modify manually

using System;
using BeatNet.Lib.Net;
using BeatNet.Lib.Net.IO;
using BeatNet.Lib.BeatSaber.Common;
using BeatNet.Lib.BeatSaber.Generated.Enum;

namespace BeatNet.Lib.BeatSaber.Generated.NetSerializable;

// ReSharper disable InconsistentNaming IdentifierTypo ClassNeverInstantiated.Global

public sealed class NoteCutInfoNetSerializable : INetSerializable
{
	public float SaberSpeed { get; set; }
	public bool CutWasOk { get; set; }
	public Vector3Serializable SaberDir { get; set; }
	public Vector3Serializable CutPoint { get; set; }
	public Vector3Serializable CutNormal { get; set; }
	public Vector3Serializable NotePosition { get; set; }
	public Vector3Serializable NoteScale { get; set; }
	public QuaternionSerializable NoteRotation { get; set; }
	public GameplayType GameplayType { get; set; }
	public ColorType ColorType { get; set; }
	public float NoteTime { get; set; }
	public int NoteLineIndex { get; set; }
	public NoteLineLayer LineLayer { get; set; }
	public float TimeToNextColorNote { get; set; }
	public Vector3Serializable MoveVec { get; set; }

	public NoteCutInfoNetSerializable(float saberSpeed, bool cutWasOk, Vector3Serializable saberDir, Vector3Serializable cutPoint, Vector3Serializable cutNormal, Vector3Serializable notePosition, Vector3Serializable noteScale, QuaternionSerializable noteRotation, GameplayType gameplayType, ColorType colorType, float noteTime, int noteLineIndex, NoteLineLayer lineLayer, float timeToNextColorNote, Vector3Serializable moveVec)
	{
		SaberSpeed = saberSpeed;
		CutWasOk = cutWasOk;
		SaberDir = saberDir;
		CutPoint = cutPoint;
		CutNormal = cutNormal;
		NotePosition = notePosition;
		NoteScale = noteScale;
		NoteRotation = noteRotation;
		GameplayType = gameplayType;
		ColorType = colorType;
		NoteTime = noteTime;
		NoteLineIndex = noteLineIndex;
		LineLayer = lineLayer;
		TimeToNextColorNote = timeToNextColorNote;
		MoveVec = moveVec;
	}

	public void WriteTo(ref NetWriter writer)
	{
		throw new NotImplementedException(); // TODO
	}

	public void ReadFrom(ref NetReader reader)
	{
		throw new NotImplementedException(); // TODO
	}
}