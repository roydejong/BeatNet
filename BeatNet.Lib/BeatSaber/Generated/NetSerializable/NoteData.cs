// This file was generated by BeatNet.CodeGen (NetSerializableGenerator)
// Do not modify manually

using System;
using BeatNet.Lib.BeatSaber.Generated.Enum;

namespace BeatNet.Lib.BeatSaber.Generated.NetSerializable;

public sealed class NoteData
{
	public int SubtypeGroupIdentifier { get; set; }
	public GameplayType GameplayType { get; set; }
	public ScoringType ScoringType { get; set; }
	public ColorType ColorType { get; set; }
	public NoteCutDirection CutDirection { get; set; }
	public float TimeToNextColorNote { get; set; }
	public float TimeToPrevColorNote { get; set; }
	public int LineIndex { get; set; }
	public NoteLineLayer NoteLineLayer { get; set; }
	public NoteLineLayer BeforeJumpNoteLineLayer { get; set; }
	public int FlipLineIndex { get; set; }
	public float FlipYSide { get; set; }
	public float CutDirectionAngleOffset { get; set; }
	public float CutSfxVolumeMultiplier { get; set; }

	public NoteData(int subtypeGroupIdentifier, GameplayType gameplayType, ScoringType scoringType, ColorType colorType, NoteCutDirection cutDirection, float timeToNextColorNote, float timeToPrevColorNote, int lineIndex, NoteLineLayer noteLineLayer, NoteLineLayer beforeJumpNoteLineLayer, int flipLineIndex, float flipYSide, float cutDirectionAngleOffset, float cutSfxVolumeMultiplier)
	{
		SubtypeGroupIdentifier = subtypeGroupIdentifier;
		GameplayType = gameplayType;
		ScoringType = scoringType;
		ColorType = colorType;
		CutDirection = cutDirection;
		TimeToNextColorNote = timeToNextColorNote;
		TimeToPrevColorNote = timeToPrevColorNote;
		LineIndex = lineIndex;
		NoteLineLayer = noteLineLayer;
		BeforeJumpNoteLineLayer = beforeJumpNoteLineLayer;
		FlipLineIndex = flipLineIndex;
		FlipYSide = flipYSide;
		CutDirectionAngleOffset = cutDirectionAngleOffset;
		CutSfxVolumeMultiplier = cutSfxVolumeMultiplier;
	}
}