// This file was generated by BeatNet.CodeGen (NetSerializableGenerator)
// Do not modify manually

using System;
using BeatNet.Lib.Net.Interfaces;
using BeatNet.Lib.Net.IO;
using BeatNet.Lib.BeatSaber.Common;
using BeatNet.Lib.BeatSaber.Generated.Enum;

namespace BeatNet.Lib.BeatSaber.Generated.NetSerializable;

// ReSharper disable InconsistentNaming IdentifierTypo ClassNeverInstantiated.Global MemberCanBePrivate.Global
public sealed class StandardScoreSyncState : INetSerializable
{
	public int ModifiedScore { get; set; }
	public int MultipliedScore { get; set; }
	public int ImmediateMaxPossibleMultipliedScore { get; set; }
	public int Combo { get; set; }
	public int Multiplier { get; set; }

	public StandardScoreSyncState(int modifiedScore, int multipliedScore, int immediateMaxPossibleMultipliedScore, int combo, int multiplier)
	{
		ModifiedScore = modifiedScore;
		MultipliedScore = multipliedScore;
		ImmediateMaxPossibleMultipliedScore = immediateMaxPossibleMultipliedScore;
		Combo = combo;
		Multiplier = multiplier;
	}

	public void WriteTo(ref NetWriter writer)
	{
		writer.WriteVarInt(ModifiedScore);
		writer.WriteVarInt(MultipliedScore);
		writer.WriteVarInt(ImmediateMaxPossibleMultipliedScore);
		writer.WriteVarInt(Combo);
		writer.WriteVarInt(Multiplier);
	}

	public void ReadFrom(ref NetReader reader)
	{
		ModifiedScore = reader.ReadVarInt();
		MultipliedScore = reader.ReadVarInt();
		ImmediateMaxPossibleMultipliedScore = reader.ReadVarInt();
		Combo = reader.ReadVarInt();
		Multiplier = reader.ReadVarInt();
	}
}