// This file was generated by BeatNet.CodeGen (RpcGenerator)
// Do not modify manually

using BeatNet.Lib.Net.IO;
using BeatNet.Lib.BeatSaber.Rpc;
using BeatNet.Lib.BeatSaber.Generated.Enum;
using BeatNet.Lib.BeatSaber.Generated.NetSerializable;

namespace BeatNet.Lib.BeatSaber.Generated.Rpc.Gameplay;

// ReSharper disable InconsistentNaming IdentifierTypo ClassNeverInstantiated.Global

public sealed class SetGameplaySceneSyncFinishedRpc : BaseRpc
{
	public override byte RpcType => (byte)GameplayRpcType.SetGameplaySceneSyncFinish;

	public PlayerSpecificSettingsAtStartNetSerializable? PlayersAtGameStartNetSerializable { get; set; } = null;
	public string? SessionGameId { get; set; } = null;

	public SetGameplaySceneSyncFinishedRpc(PlayerSpecificSettingsAtStartNetSerializable? playersAtGameStartNetSerializable = null, string? sessionGameId = null)
	{
		PlayersAtGameStartNetSerializable = playersAtGameStartNetSerializable;
		SessionGameId = sessionGameId;
	}

	public override void WriteTo(ref NetWriter writer)
	{
		base.WriteTo(ref writer);

		var nullFlags = (byte)(
			(PlayersAtGameStartNetSerializable != null ? 1 : 0) | 
			(SessionGameId != null ? 2 : 0)
		);

		writer.WriteByte(nullFlags);

		if (PlayersAtGameStartNetSerializable != null)
			writer.WriteSerializable<PlayerSpecificSettingsAtStartNetSerializable>(PlayersAtGameStartNetSerializable);

		if (SessionGameId != null)
			writer.WriteString(SessionGameId);
	}

	public override void ReadFrom(ref NetReader reader)
	{
		base.ReadFrom(ref reader);

		var nullFlags = reader.ReadByte();

		if ((nullFlags & (1 << 0)) != 0)
			PlayersAtGameStartNetSerializable = reader.ReadSerializable<PlayerSpecificSettingsAtStartNetSerializable>();
		else
			PlayersAtGameStartNetSerializable = null;

		if ((nullFlags & (1 << 1)) != 0)
			SessionGameId = reader.ReadString();
		else
			SessionGameId = null;
	}
}